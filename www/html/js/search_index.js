var search_data = {"index":{"searchIndex":["account","accounthelper","accountscontroller","activerecord","base","applicationcontroller","applicationhelper","braintree","eventmachine","game","gamerist","application","omniauth","gameristmailer","gamescontroller","gameshelper","logger","map","mapscontroller","mapshelper","openid","store","paypal","sdk","paypal","room","roomscontroller","roomshelper","ruleset","rulesetscontroller","rulesetshelper","server","serverscontroller","servershelper","steamid","steamidcontroller","transaction","activerecord","user","welcomecontroller","api_keys()","attach()","attach_steam()","auth_hash()","balance_realized()","balance_realized=()","balance_unrealized()","balance_unrealized=()","cache_fetch_else()","cache_fetch_key_else()","cache_key()","country()","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","finalize_paypal_add()","finalize_paypal_cashout()","game_params()","get_info()","index()","index()","index()","index()","index()","index()","index()","load_balance()","map_params()","new()","new()","new()","new()","new()","paypal_add()","realized_kind?()","room_params()","ruleset_params()","server_params()","set_game()","set_map()","set_room()","set_ruleset()","set_server()","show()","show()","show()","show()","show()","start_paypal_add()","steam_api_key()","total_balance()","trickle_down_score()","update()","update()","update()","update()","update()","readme"],"longSearchIndex":["account","accounthelper","accountscontroller","activerecord","activerecord::base","applicationcontroller","applicationhelper","braintree","eventmachine","game","gamerist","gamerist::application","gamerist::omniauth","gameristmailer","gamescontroller","gameshelper","logger","map","mapscontroller","mapshelper","openid","openid::store","paypal","paypal::sdk","paypal","room","roomscontroller","roomshelper","ruleset","rulesetscontroller","rulesetshelper","server","serverscontroller","servershelper","steamid","steamidcontroller","transaction","transaction::activerecord","user","welcomecontroller","gamerist#api_keys()","steamidcontroller#attach()","user#attach_steam()","steamidcontroller#auth_hash()","user#balance_realized()","user#balance_realized=()","user#balance_unrealized()","user#balance_unrealized=()","activerecord::base#cache_fetch_else()","activerecord::base#cache_fetch_key_else()","activerecord::base#cache_key()","gamerist#country()","gamescontroller#create()","mapscontroller#create()","roomscontroller#create()","rulesetscontroller#create()","serverscontroller#create()","gamescontroller#destroy()","mapscontroller#destroy()","roomscontroller#destroy()","rulesetscontroller#destroy()","serverscontroller#destroy()","gamescontroller#edit()","mapscontroller#edit()","roomscontroller#edit()","rulesetscontroller#edit()","serverscontroller#edit()","paypal#finalize_paypal_add()","user#finalize_paypal_cashout()","gamescontroller#game_params()","steamidcontroller#get_info()","accountscontroller#index()","gamescontroller#index()","mapscontroller#index()","roomscontroller#index()","rulesetscontroller#index()","serverscontroller#index()","welcomecontroller#index()","user#load_balance()","mapscontroller#map_params()","gamescontroller#new()","mapscontroller#new()","roomscontroller#new()","rulesetscontroller#new()","serverscontroller#new()","transaction::paypal_add()","transaction#realized_kind?()","roomscontroller#room_params()","rulesetscontroller#ruleset_params()","serverscontroller#server_params()","gamescontroller#set_game()","mapscontroller#set_map()","roomscontroller#set_room()","rulesetscontroller#set_ruleset()","serverscontroller#set_server()","gamescontroller#show()","mapscontroller#show()","roomscontroller#show()","rulesetscontroller#show()","serverscontroller#show()","paypal#start_paypal_add()","steamidcontroller#steam_api_key()","user#total_balance()","transaction#trickle_down_score()","gamescontroller#update()","mapscontroller#update()","roomscontroller#update()","rulesetscontroller#update()","serverscontroller#update()",""],"info":[["Account","","Account.html","",""],["AccountHelper","","AccountHelper.html","",""],["AccountsController","","AccountsController.html","",""],["ActiveRecord","","ActiveRecord.html","",""],["ActiveRecord::Base","","ActiveRecord/Base.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Braintree","","Braintree.html","",""],["EventMachine","","EventMachine.html","",""],["Game","","Game.html","","<p>Game identity, i.e. TF2, CS, Warsow\n"],["Gamerist","","Gamerist.html","","<p>Calculating a wager:\n<p>Where final wager (W) is 100\n<p>losers give away: 100 - [W * VAT compensation = 10] - â€¦\n"],["Gamerist::Application","","Gamerist/Application.html","",""],["Gamerist::OmniAuth","","Gamerist/OmniAuth.html","",""],["GameristMailer","","GameristMailer.html","",""],["GamesController","","GamesController.html","",""],["GamesHelper","","GamesHelper.html","",""],["Logger","","Logger.html","",""],["Map","","Map.html","",""],["MapsController","","MapsController.html","",""],["MapsHelper","","MapsHelper.html","",""],["OpenID","","OpenID.html","",""],["OpenID::Store","","OpenID/Store.html","",""],["PayPal","","PayPal.html","",""],["PayPal::SDK","","PayPal/SDK.html","",""],["Paypal","","Paypal.html","",""],["Room","","Room.html","",""],["RoomsController","","RoomsController.html","",""],["RoomsHelper","","RoomsHelper.html","",""],["Ruleset","","Ruleset.html","",""],["RulesetsController","","RulesetsController.html","",""],["RulesetsHelper","","RulesetsHelper.html","",""],["Server","","Server.html","",""],["ServersController","","ServersController.html","",""],["ServersHelper","","ServersHelper.html","",""],["Steamid","","Steamid.html","",""],["SteamidController","","SteamidController.html","",""],["Transaction","","Transaction.html","",""],["Transaction::ActiveRecord","","Transaction/ActiveRecord.html","",""],["User","","User.html","",""],["WelcomeController","","WelcomeController.html","",""],["api_keys","Gamerist","Gamerist.html#method-i-api_keys","()",""],["attach","SteamidController","SteamidController.html#method-i-attach","()",""],["attach_steam","User","User.html#method-i-attach_steam","(access_token)",""],["auth_hash","SteamidController","SteamidController.html#method-i-auth_hash","()",""],["balance_realized","User","User.html#method-i-balance_realized","()",""],["balance_realized=","User","User.html#method-i-balance_realized-3D","(v)",""],["balance_unrealized","User","User.html#method-i-balance_unrealized","()",""],["balance_unrealized=","User","User.html#method-i-balance_unrealized-3D","(v)",""],["cache_fetch_else","ActiveRecord::Base","ActiveRecord/Base.html#method-i-cache_fetch_else","(k, &proc)",""],["cache_fetch_key_else","ActiveRecord::Base","ActiveRecord/Base.html#method-i-cache_fetch_key_else","(k, &proc)",""],["cache_key","ActiveRecord::Base","ActiveRecord/Base.html#method-i-cache_key","(k)",""],["country","Gamerist","Gamerist.html#method-i-country","(code)","<p>country-specifics\n"],["create","GamesController","GamesController.html#method-i-create","()","<p>POST /games POST /games.json\n"],["create","MapsController","MapsController.html#method-i-create","()","<p>POST /maps POST /maps.json\n"],["create","RoomsController","RoomsController.html#method-i-create","()","<p>POST /rooms POST /rooms.json\n"],["create","RulesetsController","RulesetsController.html#method-i-create","()","<p>POST /rulesets POST /rulesets.json\n"],["create","ServersController","ServersController.html#method-i-create","()","<p>POST /servers POST /servers.json\n"],["destroy","GamesController","GamesController.html#method-i-destroy","()","<p>DELETE /games/1 DELETE /games/1.json\n"],["destroy","MapsController","MapsController.html#method-i-destroy","()","<p>DELETE /maps/1 DELETE /maps/1.json\n"],["destroy","RoomsController","RoomsController.html#method-i-destroy","()","<p>DELETE /rooms/1 DELETE /rooms/1.json\n"],["destroy","RulesetsController","RulesetsController.html#method-i-destroy","()","<p>DELETE /rulesets/1 DELETE /rulesets/1.json\n"],["destroy","ServersController","ServersController.html#method-i-destroy","()","<p>DELETE /servers/1 DELETE /servers/1.json\n"],["edit","GamesController","GamesController.html#method-i-edit","()","<p>GET /games/1/edit\n"],["edit","MapsController","MapsController.html#method-i-edit","()","<p>GET /maps/1/edit\n"],["edit","RoomsController","RoomsController.html#method-i-edit","()","<p>GET /rooms/1/edit\n"],["edit","RulesetsController","RulesetsController.html#method-i-edit","()","<p>GET /rulesets/1/edit\n"],["edit","ServersController","ServersController.html#method-i-edit","()","<p>GET /servers/1/edit\n"],["finalize_paypal_add","Paypal","Paypal.html#method-i-finalize_paypal_add","(pp, payerid)",""],["finalize_paypal_cashout","User","User.html#method-i-finalize_paypal_cashout","(am, pp)",""],["game_params","GamesController","GamesController.html#method-i-game_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["get_info","SteamidController","SteamidController.html#method-i-get_info","()",""],["index","AccountsController","AccountsController.html#method-i-index","()",""],["index","GamesController","GamesController.html#method-i-index","()","<p>GET /games GET /games.json\n"],["index","MapsController","MapsController.html#method-i-index","()","<p>GET /maps GET /maps.json\n"],["index","RoomsController","RoomsController.html#method-i-index","()","<p>GET /rooms GET /rooms.json\n"],["index","RulesetsController","RulesetsController.html#method-i-index","()","<p>GET /rulesets GET /rulesets.json\n"],["index","ServersController","ServersController.html#method-i-index","()","<p>GET /servers GET /servers.json\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["load_balance","User","User.html#method-i-load_balance","()","<p>unrealized + realized\n"],["map_params","MapsController","MapsController.html#method-i-map_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["new","GamesController","GamesController.html#method-i-new","()","<p>GET /games/new\n"],["new","MapsController","MapsController.html#method-i-new","()","<p>GET /maps/new\n"],["new","RoomsController","RoomsController.html#method-i-new","()","<p>GET /rooms/new\n"],["new","RulesetsController","RulesetsController.html#method-i-new","()","<p>GET /rulesets/new\n"],["new","ServersController","ServersController.html#method-i-new","()","<p>GET /servers/new\n"],["paypal_add","Transaction","Transaction.html#method-c-paypal_add","(state, kind, )","<p>try to generalize\n"],["realized_kind?","Transaction","Transaction.html#method-i-realized_kind-3F","()",""],["room_params","RoomsController","RoomsController.html#method-i-room_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["ruleset_params","RulesetsController","RulesetsController.html#method-i-ruleset_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["server_params","ServersController","ServersController.html#method-i-server_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["set_game","GamesController","GamesController.html#method-i-set_game","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_map","MapsController","MapsController.html#method-i-set_map","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_room","RoomsController","RoomsController.html#method-i-set_room","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_ruleset","RulesetsController","RulesetsController.html#method-i-set_ruleset","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_server","ServersController","ServersController.html#method-i-set_server","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["show","GamesController","GamesController.html#method-i-show","()","<p>GET /games/1 GET /games/1.json\n"],["show","MapsController","MapsController.html#method-i-show","()","<p>GET /maps/1 GET /maps/1.json\n"],["show","RoomsController","RoomsController.html#method-i-show","()","<p>GET /rooms/1 GET /rooms/1.json\n"],["show","RulesetsController","RulesetsController.html#method-i-show","()","<p>GET /rulesets/1 GET /rulesets/1.json\n"],["show","ServersController","ServersController.html#method-i-show","()","<p>GET /servers/1 GET /servers/1.json\n"],["start_paypal_add","Paypal","Paypal.html#method-i-start_paypal_add","(user, points)",""],["steam_api_key","SteamidController","SteamidController.html#method-i-steam_api_key","()",""],["total_balance","User","User.html#method-i-total_balance","()",""],["trickle_down_score","Transaction","Transaction.html#method-i-trickle_down_score","(lastr, lastu)","<p>First unrealized, then realized\n"],["update","GamesController","GamesController.html#method-i-update","()","<p>PATCH/PUT /games/1 PATCH/PUT /games/1.json\n"],["update","MapsController","MapsController.html#method-i-update","()","<p>PATCH/PUT /maps/1 PATCH/PUT /maps/1.json\n"],["update","RoomsController","RoomsController.html#method-i-update","()","<p>PATCH/PUT /rooms/1 PATCH/PUT /rooms/1.json\n"],["update","RulesetsController","RulesetsController.html#method-i-update","()","<p>PATCH/PUT /rulesets/1 PATCH/PUT /rulesets/1.json\n"],["update","ServersController","ServersController.html#method-i-update","()","<p>PATCH/PUT /servers/1 PATCH/PUT /servers/1.json\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and â€¦\n"]]}}